apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "policy-management-api.fullname" . }}-policy-api
  labels:
    app: {{ template "policy-management-api.name" . }}
    chart: {{ template "policy-management-api.chart" . }}
    draft: {{ .Values.draft | default "draft-app" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  revisionHistoryLimit: 0
  replicas: {{ .Values.policymanagementapi.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "policy-management-api.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "policy-management-api.name" . }}
        draft: {{ .Values.draft | default "draft-app" }}
        release: {{ .Release.Name }}
      annotations:
        buildID: {{ .Values.buildID | default "" | quote }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.imagestore.policymanagementapi.registry }}{{ .Values.imagestore.policymanagementapi.repository }}:{{ .Values.imagestore.policymanagementapi.tag }}"
          ports:
            - name: http
              containerPort: {{ .Values.policymanagementapi.deployment.containerPort }}
              protocol: TCP
          {{- if .Values.policymanagementapi.probes.enabled }}
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          {{- end }}
          envFrom:
          - configMapRef:
              name: {{ template "policy-management-api.fullname" . }}-policy-configuration
          env:
            - name: ASPNETCORE_URLS
              value: "https://+:443"
            - name: AccountName
              valueFrom:
                secretKeyRef:
                  name: policystoresecret
                  key: accountName
            - name: AccountKey
              valueFrom:
                secretKeyRef:
                  name: policystoresecret
                  key: accountKey
            - name: PolicyUpdateServiceEndpointCsv
              valueFrom:
                secretKeyRef:
                  name: policyupdateserviceref
                  key: PolicyUpdateServiceEndpointCsv
            - name: TokenUsername
              valueFrom:
                secretKeyRef:
                  name: policyupdateserviceref
                  key: TokenUsername
            - name: TokenPassword
              valueFrom:
                secretKeyRef:
                  name: policyupdateserviceref
                  key: TokenPassword
            - name: NcfsPolicyUpdateServiceEndpointCsv
              valueFrom:
                secretKeyRef:
                  name: ncfspolicyupdateserviceref
                  key: NcfsPolicyUpdateServiceEndpointCsv
            {{- $root := . }}
            {{- range $ref, $values := .Values.policymanagementapi.secrets }}
            {{- range $key, $value := $values }}
            - name: {{ $ref }}_{{ $key }}
              valueFrom:
                secretKeyRef:
                  name: {{ template "policy-management-api.fullname" $root }}-{{ $ref | lower }}
                  key: {{ $key }}
            {{- end }}
            {{- end }}
          resources:
{{ toYaml .Values.policymanagementapi.resources | indent 12 }}
    {{- with .Values.policymanagementapi.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.policymanagementapi.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.policymanagementapi.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
      imagePullSecrets:
        - name: policy-management-registry-credential