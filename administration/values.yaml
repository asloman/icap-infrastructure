environment:
managementui:
  deployment:
    name: icap-management-ui
    port: 8080
  service:
    name: icap-management-ui-service
    port: 80
  config:
    transactionEventApiUrl: https://transaction-event-api/api/v1
    policyManagementApiUrl: https://policy-management-api/api/v1
policymanagementapi:
  name: policy-management-api
  replicaCount: 1
  imagePullSecrets: []
  service:
    type: ClusterIP
    port: 443
  shareName: transactions
  storage: 100Gi
  configuration:
    ASPNETCORE_URLS: "https://+:443"
  deployment:
    containerPort: 443
  probes:
    enabled: false
  ingress:
    enabled: false
    annotations: {}
    path: /
    tls: []
  PolicyUpdateServiceEndpointCsv: https://policy-update-service.icap-adaptation.svc.cluster.local:10000/
  NcfsPolicyUpdateServiceEndpointCsv: https://ncfs-policy-update-service.icap-ncfs.svc.cluster.local:10001/
  resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #  cpu: 100m
  #  memory: 128Mi
  # requests:
  #  cpu: 100m
  #  memory: 128Mi
  nodeSelector: {}
  tolerations: []
  affinity: {}
transactioneventapi:
  name: transaction-event-api
  replicaCount: 1
  imagePullSecrets: []
  # Optionally specify an array of imagePullSecrets.
  # Secrets must be manually created in the namespace.
  # ref: https://kubernetes.io/docs/concepts/containers/images/#specifying-imagepullsecrets-on-a-pod
  #
  # This uses credentials from secret "myRegistryKeySecretName".
  # - name: myRegistryKeySecretName
  service:
    type: ClusterIP
    port: 443
  configuration:
    ShareName: transactions
    ASPNETCORE_URLS: "https://+:443"
  deployment:
    containerPort: 443
  probes:
    enabled: false
  ingress:
    enabled: false
    annotations: {}
    # kubernetes.io/tls-acme: "true"
    path: /
    # hosts:
    #   - chart-example.local
    tls: []
    # - secretName: chart-example-tls
    #   hosts:
    #     - chart-example.local
  resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #  cpu: 100m
  #  memory: 128Mi
  # requests:
  #  cpu: 100m
  #  memory: 128Mi
  nodeSelector: {}
  tolerations: []
  affinity: {}
transactionqueryaggregator:
  name: transaction-query-aggregator
  replicaCount: 1
  imagePullSecrets: []
  service:
    type: ClusterIP
    port: 443
  deployment:
    containerPort: 443
  configuration:
    TransactionQueryServiceEndpointCsv: https://transaction-query-service.icap-adaptation.svc.cluster.local
    ASPNETCORE_URLS: "https://+:443"
  probes:
    enabled: false
  ingress:
    enabled: false
    annotations: {}
    path: /
    tls: []
  resources: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}
imagestore:
  icapmanagementui:
    registry: ""
    repository: glasswallsolutions/icap-management-ui
    tag: develop-0909fbe
  policymanagementapi:
    registry: ""
    repository: glasswallsolutions/policy-management-api
    tag: develop-b47b460
  transactioneventapi:
    registry: ""
    repository: glasswallsolutions/transactioneventapi
    tag: develop-68b5973
  transactionqueryaggregator:
    registry: ""
    repository: glasswallsolutions/transaction-query-aggregator
    tag: develop-1910399
secrets:
  containerregistry:
    dockerconfigjson: "<<https://gw-icap-keyvault.vault.azure.net/secrets/az-registry-dockerconfig>>"
  transactionqueryaggregator:
    transactionqueryserviceref:
      username: "<<https://gw-tfstate-Vault.vault.azure.net/secrets/transactionQueryServiceUsername>>"
      password: "<<https://gw-tfstate-Vault.vault.azure.net/secrets/transactionQueryServicePassword>>"
  policymanagementapi:
    policystoresecret:
      azurestorageaccountname: "<<https://gw-tfstate-Vault.vault.azure.net/secrets/policyStoreAccountName>>"
      azurestorageaccountkey: "<<https://gw-tfstate-Vault.vault.azure.net/secrets/policyStoreAccountKey>>"
    policyupdateserviceref:
      username: "<<https://gw-tfstate-Vault.vault.azure.net/secrets/policyUpdateServiceUsername>>"
      password: "<<https://gw-tfstate-Vault.vault.azure.net/secrets/policyUpdateServicePassword>>"
    ncfspolicyupdateserviceref:
      username: "<<https://gw-tfstate-Vault.vault.azure.net/secrets/ncfsPolicyUpdateServiceUsername>>"
      password: "<<https://gw-tfstate-Vault.vault.azure.net/secrets/ncfsPolicyUpdateServicePassword>>"
